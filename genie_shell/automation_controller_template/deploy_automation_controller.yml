---
- name: Automation Controller 배포
  hosts: localhost
  vars:
    base_path: 'genie'
    minikube_cpu: '4'
    minikube_ram: '6g'
    genie_ip: 'localhost'
  vars_files: 
    - /genie/ansible_vars_files.json
  gather_facts: no
  tasks:
    - name: kube config Home 디렉토리 설정
      shell: ln -s -f /root/.minikube /root/.kube/.minikube

    - name: Minikube 클러스터 시작
      shell: minikube start --cpus={{ minikube_cpu }} --memory={{ minikube_ram }} --addons=ingress --install-addons=true --driver=docker --force
      tags:
         - start minikube
         
    - name: Minikube 상태 체크
      shell: minikube status |awk -F ' ' '/{{item.shell}}/{ print $2 }'
      register: minikube_host_stauts
      failed_when: "'Running' not in minikube_host_stauts.stdout_lines"
      with_items:
        - { shell: 'host'}
        - { shell: 'kubelet'}
        - { shell: 'apiserver'}

    - name: Genie service 등록
      shell: systemctl enable genie.service

    - name: 기본 Namespace를 awx로 변경
      shell: kubectl config set-context --current --namespace=awx

    - name: SSH 키 생성
      community.crypto.openssh_keypair:
        path: /root/.ssh/id_rsa
        force: yes

    - name: 생성된 공개키 Mold SSH 키페어 등록
      cs_sshkeypair:
        name: "{{ AC_INSTANCE_NAME }}"
        public_key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
        api_url: "{{ MOLD_API_URL }}"
        api_key: "{{ MOLD_API_KEY }}"
        api_secret: "{{ MOLD_SECRET_KEY }}"

    # - name: Automation Controller Egress 설정
    #   cs_firewall:
    #     network: "{{ AC_NETWORK_NAME }}"
    #     api_url: "{{ MOLD_API_URL }}"
    #     api_key: "{{ MOLD_API_KEY }}"
    #     api_secret: "{{ MOLD_SECRET_KEY }}"
    #     zone: "{{ MOLD_ZONE_NAME }}"
    #     type: egress
    #     protocol: icmp
        
    - name: Automation Controller 포트포워딩 설정
      cs_portforward:
        ip_address: "{{ AC_PUBLIC_IP }}"
        vm: "{{ AC_INSTANCE_NAME }}"
        api_url: "{{ MOLD_API_URL }}"
        api_key: "{{ MOLD_API_KEY }}"
        api_secret: "{{ MOLD_SECRET_KEY }}"
        zone: "{{ MOLD_ZONE_NAME }}"
        public_port: "{{ item }}"
        private_port: "{{ item }}"
      with_items:
      - 80
      - 22
      - 5432
      - 8001

    - name: Automation Controller 방화벽 설정
      cs_firewall:
        ip_address: "{{ AC_PUBLIC_IP }}"
        cidr: 0.0.0.0/0
        port: "{{ item }}"
        protocol: tcp
        api_url: "{{ MOLD_API_URL }}"
        api_key: "{{ MOLD_API_KEY }}"
        api_secret: "{{ MOLD_SECRET_KEY }}"
        zone: "{{ MOLD_ZONE_NAME }}"
      with_items:
      - 80
      - 22
      - 5432
      - 8001

    - name: Genie Dashboard 응답 대기 중
      shell: curl -o /dev/null -s -w "%{http_code}\n" http://{{ genie_ip }}:80
      register: genie_return_code
      until: genie_return_code.stdout == "200"
      retries: 50

    - name: AWX 초기 관리자 패스워드 추출
      shell: kubectl get -n awx secret awx-admin-password -o jsonpath="{.data.password}" | base64 --decode
      register: admin_password

    - name: Automation Controller Credential 생성
      awx.awx.credential:
        name: Automation Controller Credential
        organization: Default
        credential_type: Machine
        state: present
        inputs:
          username: root
          ssh_key_data: "{{ lookup('file', '/root/.ssh/id_rsa') }}"
        controller_host: "http://{{ genie_ip }}:80"
        controller_username: admin
        controller_password: "{{ admin_password.stdout }}"

    - name: Job settings - 전역변수 설정
      awx.awx.settings:
        settings:
          AWX_TASK_ENV:
            MOLD_API_URL: "{{ MOLD_API_URL }}"
            MOLD_API_KEY: "{{ MOLD_API_KEY }}"
            MOLD_SECRET_KEY: "{{ MOLD_SECRET_KEY }}"
            MOLD_ZONE_NAME: "{{ MOLD_ZONE_NAME }}"
            MOLD_SSH_KEYPAIR: "{{ AC_INSTANCE_NAME }}"
            AC_NETWORK_NAME: "{{ AC_NETWORK_NAME }}"
            MOLD_DEFAULT_URL: "{{ MOLD_DEFAULT_URL }}"
        controller_host: "http://{{ genie_ip }}:80"
        controller_username: admin
        controller_password: "{{ admin_password.stdout }}"

    - name: Genie 원격 저장소 프로젝트 생성 API
      uri:
        url: http://{{ genie_ip }}:80/api/v2/projects/
        method: POST
        body_format: json
        user: admin
        password: "{{ admin_password.stdout }}"
        force_basic_auth: yes
        body:
          {
            "name": "remote archive",
            "scm_type": "archive",
            "scm_url": "http://{{ MOLD_DEFAULT_URL }}:7000/nextcloud.zip",
            "scm_delete_on_update": "true"
          }
        status_code: 201
        
    - name: Genie 프로젝트 생성
      awx.awx.project:
        name: genie project
        default_environment: AWX EE (genie_latest)
        scm_type: git
        scm_url: https://github.com/stardom3645/ansible-examples.git
        scm_branch: genie
        scm_update_on_launch: yes
        state: present
        controller_host: "http://{{ genie_ip }}:80"
        controller_username: admin
        controller_password: "{{ admin_password.stdout }}"

    - name: Genie job 템플릿 생성
      awx.awx.job_template:
        name: "cs_instance_info"
        job_type: "run"
        inventory: "Demo Inventory"
        project: "genie project"
        playbook: "cs_module/cs_instance_info2.yml"
        credentials:
          - "Automation Controller Credential"
        state: "present"
        controller_host: "http://{{ genie_ip }}:80"
        controller_username: admin
        controller_password: "{{ admin_password.stdout }}"

